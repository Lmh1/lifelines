These instructions are for building a new lifelines 
release, in your cvs working directory, and actually
releasing it.

Fetch latest cvs if desired, eg 
  $ cvs -z3 up -a

Edit the version number, setting it to the new release:
(Running, eg, "sh build/setversions.sh 3.0.19" does this)
  NEWS
  INSTALL
  README
  configure.in
  build/rpm/lifelines.spec
  src/hdrs/version.h
  build/msvc6/dbverify/dbVerify.rc (4 occurrences)
  build/msvc6/llexec/llexec.rc (4 occurrences)
  build/msvc6/llines/llines.rc (4 occurrences)
  docs/ll-devguide.xml (1 occurrence)
  docs/ll-reportmanual.xml (2 occurrences)
  docs/ll-userguide.xml (2 occurrences)
  docs/llines.1 (& year & month as well)

Run autotools:
  $ sh autogen.sh

Build local copy in ./bld subdirectory:
  $ rm -rf bld
  $ mkdir bld
  $ cd bld
  $ ../configure
  $ make

Update master message catalog template (for i18n):
  $ mv ../po/lifelines.pot ../po/lifelines.old.pot
  $ cd po
  $ make lifelines.pot
  $ cd ..

Build distribution tarball:
  $ make dist
  $ cd ..

Add an entry mentioning the new version in the
  ChangeLog

Commit changes (new version number, new message catalogs):
  $ cvs -z3 ci

Build any other files (eg, other tarball formats,
MS-Windows binary packages, rpm packages).
For rpm packages, see ./build/rpm/lifelines.spec.

Go to lifelines admin page, and create a new
beta release. Paste in top part of ./NEWS file
for ChangeLog entry, and copy & paste release
notes from previous beta release, updating md5
signatures to those of new release files.

Upload the release files (tarball etc.) to
uploads.sourceforge.net. From the release page
(above, opened from project admin), refresh
and attach the release files, and set properties
appropriately (can look at previous releases to
see how to set them).

Tag the cvs source via (for example, for version 3.0.25)
  cvs tag v3_0_25

Send an announcement to the LINES-L mailing list
 (send to user LINES-L at domain LISTSERV.NODAK.EDU).



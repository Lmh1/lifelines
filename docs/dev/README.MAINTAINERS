Note: See top of README.DEVELOPERS for required
software; maintainers need the same software.

These instructions are for building a new lifelines 
release, in your cvs working directory, and actually
releasing it.

Fetch latest cvs if desired, eg:
$ git checkout master
$ git pull

Compile and test current source, using report st/st_all.

Edit the version number, setting it to the new release:
(Running, eg, "cd build; sh setversions.sh 3.0.19; cd .." does this)
(NB: setversions.sh requires bash3)
  NEWS
  INSTALL
  README
  configure.ac
  build/rpm/lifelines.spec
  src/hdrs/version.h
  build/msvc6/btedit/btedit.rc (4 occurrences)
  build/msvc6/dbverify/dbVerify.rc (4 occurrences)
  build/msvc6/llexec/llexec.rc (4 occurrences)
  build/msvc6/llines/llines.rc (4 occurrences)
  docs/ll-devguide.xml (2 occurrences)
  docs/ll-reportmanual.xml (2 occurrences)
  docs/ll-userguide.xml (2 occurrences)
  docs/man/btedit.1 (& year & month as well)
  docs/man/llexec.1 (& year & month as well)
  docs/man/dbverify.1 (& year & month as well)
  docs/man/llines.1 (& year & month as well)

Run autotools:
  $ sh autogen.sh

Note: There are several reports which do not build
correctly in UTF-8 locale. Therefore, if you use
a UTF-8 locale, do something like so:
export LANG=en_US.ISO-8859-1

Build local copy in ./bld subdirectory:
  $ rm -rf bld
  $ mkdir bld
  $ cd bld
  $ ../configure
  $ make

Update master message catalog template (for i18n):
  $ mv ../po/lifelines.pot ../po/lifelines.old.pot
  $ cd po
  $ make lifelines.pot
  $ cd ..

Build distribution tarball:
  $ make dist
  $ cd ..

Add an entry mentioning the new version in the
  ChangeLog

Commit changes (new version number, new message catalogs):
$ git add ...
$ git commit

Announce new version to Free Translation Project.
Per: http://translationproject.org/html/maintainers.html

<< Whenever you make a new release of your package, you should announce
   it to the TP coordinators at <coordinator@translationproject.org> by
   sending them the URL of the release tarball -- this tarball should
   contain an up to date POT file. >>

Build any other files (eg, other tarball formats,
MS-Windows binary packages, rpm packages).

rpm:  See README.MAINTAINERS.rpm

debian: lifelines is a supported debian package
         and has a debian maintainer (q.v.)

FreeBSD: lifelines is a support FreeBsd port
         and has a FreeBSD maintainer.

MS-Windows: See README.MAINTAINERS.win32

Tag the repository at github using the version number used.

$ git tag X.Y.Z

Create a release at github, and upload the release packages.
(Should be at least a source tgz, but there could be Windows and MacOSX binaries).

Send an announcement to the LINES-L mailing list
 (send to user LINES-L at domain LISTSERV.NODAK.EDU).

